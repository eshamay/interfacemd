!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
AngleDistro	angledistro.cpp	/^AngleDistro::AngleDistro () : _sys(AmberSystem (PRMTOP, MDCRD, FORCE)){$/;"	f	class:AngleDistro
AtomDensity	densitytest.cpp	/^vector<int> DensityAnalyzer::AtomDensity (string const atomname) {$/;"	f	class:DensityAnalyzer
CollectChi	morita.cpp	/^void CollectChi (std::vector< std::complex<double> >& Chi_step, std::vector< std::complex<double> >& Chi_total) {$/;"	f
CollectChi	morita.mpi.cpp	/^void CollectChi (std::vector< std::complex<double> >& Chi_step, std::vector< std::complex<double> >& Chi_total) {$/;"	f
DensityAnalyzer	densitytest.cpp	/^DensityAnalyzer::DensityAnalyzer (char * argv[], int const argc, int const numSteps, double const start, double const end, double const binsize, coord const axis) : _sys(AmberSystem(PRMTOP, MDCRD, FORCE)) {$/;"	f	class:DensityAnalyzer
FindInterfacialAtoms	morita.mpi.cpp	/^void FindInterfacialAtoms (vector<Molecule *>& int_mols, vector<Atom *>& int_atoms, MPIMolSystem& sys) {$/;"	f
FindInterfacialWaters	morita.cpp	/^void FindInterfacialWaters (vector<Water *>& int_mols, vector<Atom *>& int_atoms, AmberSystem& sys) {$/;"	f
MPI_PackageChi	morita.mpi.cpp	/^void MPI_PackageChi (std::vector< std::complex<double> >& TimestepChi, std::vector< std::complex<double> >& TotalChi, MPIMolSystem& sys) {$/;"	f
MPI_SYS	morita.mpi.cpp	1;"	d	file:
OrderParameters	orderparams.cpp	/^OrderParameters::OrderParameters (int argc, char **argv) {$/;"	f	class:OrderParameters
OutputData	morita.cpp	/^void OutputData (FILE * fp, vector< complex<double> >& chi) {$/;"	f
OutputData	morita.mpi.cpp	/^void OutputData (FILE * fp, vector< complex<double> >& chi) {$/;"	f
OutputHeader	morita.cpp	/^void OutputHeader () {$/;"	f
OutputHeader	morita.mpi.cpp	/^void OutputHeader (MPIMolSystem& sys) {$/;"	f
OutputStatus	dipoletcf.cpp	/^void OutputStatus (int step) {$/;"	f
OutputStatus	morita.cpp	/^void OutputStatus (int const count) {$/;"	f
OutputStatus	morita.mpi.cpp	/^void OutputStatus (int const count, MPIMolSystem& sys) {$/;"	f
PrintOutput	orderparams.cpp	/^void OrderParameters::PrintOutput () {$/;"	f	class:OrderParameters
PrintStatus	orderparams.cpp	/^void OrderParameters::PrintStatus () {$/;"	f	class:OrderParameters
SystemDensities	densitytest.cpp	/^void DensityAnalyzer::SystemDensities () {$/;"	f	class:DensityAnalyzer
WaterHistogram	angledistro.cpp	/^std::vector< std::vector<int> >& AngleDistro::WaterHistogram (int const timesteps) {$/;"	f	class:AngleDistro
_ClearHisto	angledistro.cpp	/^void AngleDistro::_ClearHisto () {$/;"	f	class:AngleDistro
_PrintOutput	angledistro.cpp	/^void AngleDistro::_PrintOutput () const {$/;"	f	class:AngleDistro
_PrintStatus	angledistro.cpp	/^void AngleDistro::_PrintStatus () const {$/;"	f	class:AngleDistro
_PrintStatus	densitytest.cpp	/^void DensityAnalyzer::_PrintStatus (int const step) {$/;"	f	class:DensityAnalyzer
_PrintToFile	densitytest.cpp	/^void DensityAnalyzer::_PrintToFile () {$/;"	f	class:DensityAnalyzer
_WaterStepHistogram	angledistro.cpp	/^std::vector< std::vector<int> > AngleDistro::_WaterStepHistogram () {$/;"	f	class:AngleDistro
main	Qpt.cpp	/^int main () {$/;"	f
main	ambertest.cpp	/^int main (int argc, char *argv) {$/;"	f
main	angledistro.cpp	/^int main () {$/;"	f
main	angletest.cpp	/^int main () {$/;"	f
main	closest.cpp	/^int main (int argc, char **argv) {$/;"	f
main	densitytest.cpp	/^int main (int argc, char **argv) {$/;"	f
main	dipoletcf.cpp	/^int main (int *argc, char **argv) {$/;"	f
main	fillbox.cpp	/^int main (int argc, char **argv) {$/;"	f
main	matrixtest.cpp	/^int main (int argc, char*argv) {$/;"	f
main	mdcrd2pdb.cpp	/^int main (int argc, char **argv) {$/;"	f
main	morita.cpp	/^int main (int argc, char **argv) {$/;"	f
main	morita.mpi.cpp	/^int main (int argc, char **argv) {$/;"	f
main	mpitest.cpp	/^int main (int argc, char **argv) {$/;"	f
main	orderparams.cpp	/^int main (int argc, char **argv) {$/;"	f
main	temp.cpp	/^int main () {$/;"	f
main	toptest.cpp	/^int main (int argc, char *argv) {$/;"	f
main	wanniertest.cpp	/^int main () {$/;"	f
main	xyzdipole_analysis.cpp	/^int main (int *argc, char **argv) {$/;"	f
pdb	closest.cpp	6;"	d	file:
~AngleDistro	angledistro.cpp	/^AngleDistro::~AngleDistro () {$/;"	f	class:AngleDistro
