%.o	Makefile	/^%.o: %.cpp %.h$/
AdjacencyMatrix::AdjacencyMatrix	adjacencymatrix.cpp	/^AdjacencyMatrix::AdjacencyMatrix () :$/
AdjacencyMatrix::AdjacencyMatrix	adjacencymatrix.cpp	/^AdjacencyMatrix::AdjacencyMatrix (const Atom_ptr_v/
AdjacencyMatrix::BondedAtoms	adjacencymatrix.cpp	/^Atom_ptr_vec AdjacencyMatrix::BondedAtoms (Atom co/
AdjacencyMatrix::BondedAtoms	adjacencymatrix.cpp	/^Atom_ptr_vec AdjacencyMatrix::BondedAtoms (Atom co/
AdjacencyMatrix::BondedAtoms	adjacencymatrix.cpp	/^Atom_ptr_vec AdjacencyMatrix::BondedAtoms (Atom co/
AdjacencyMatrix::Bonds	adjacencymatrix.cpp	/^Bond_ptr_vec AdjacencyMatrix::Bonds (Atom const * /
AdjacencyMatrix::BuildMatrix	adjacencymatrix.cpp	/^void AdjacencyMatrix::BuildMatrix () {$/
AdjacencyMatrix::ClearBonds	adjacencymatrix.cpp	/^void AdjacencyMatrix::ClearBonds () {$/
AdjacencyMatrix::CovalentBond	adjacencymatrix.cpp	/^bool AdjacencyMatrix::CovalentBond (bondtype const/
AdjacencyMatrix::GetBond	adjacencymatrix.cpp	/^Bond * AdjacencyMatrix::GetBond (Atom const * cons/
AdjacencyMatrix::HBonds	adjacencymatrix.cpp	/^Bond_ptr_vec AdjacencyMatrix::HBonds (Atom const */
AdjacencyMatrix::ID	adjacencymatrix.cpp	/^int AdjacencyMatrix::ID (Atom const * const ap) co/
AdjacencyMatrix::NumHBonds	adjacencymatrix.cpp	/^int AdjacencyMatrix::NumHBonds (Water const * cons/
AdjacencyMatrix::SetBond	adjacencymatrix.cpp	/^void AdjacencyMatrix::SetBond (int x, int y, const/
AdjacencyMatrix::UpdateMatrix	adjacencymatrix.cpp	/^void AdjacencyMatrix::UpdateMatrix (const Atom_ptr/
AdjacencyMatrix::WaterCoordination	adjacencymatrix.cpp	/^coordination AdjacencyMatrix::WaterCoordination (W/
AdjacencyMatrix::_FixSharedAtoms	adjacencymatrix.cpp	/^void AdjacencyMatrix::_FixSharedAtoms () {$/
AdjacencyMatrix::~AdjacencyMatrix	adjacencymatrix.cpp	/^AdjacencyMatrix::~AdjacencyMatrix () {$/
AmberSystem::AmberSystem	ambersystem.cpp	/^AmberSystem::AmberSystem (const std::string prmtop/
AmberSystem::LoadFirst	ambersystem.cpp	/^void AmberSystem::LoadFirst () {$/
AmberSystem::LoadNext	ambersystem.cpp	/^void AmberSystem::LoadNext () {$/
AmberSystem::PrintCRDFile	ambersystem.cpp	/^void AmberSystem::PrintCRDFile () const {$/
AmberSystem::_ParseAtomInformation	ambersystem.cpp	/^void AmberSystem::_ParseAtomInformation () {$/
AmberSystem::_ParseAtomVectors	ambersystem.cpp	/^void AmberSystem::_ParseAtomVectors () {$/
AmberSystem::_ParseMolecules	ambersystem.cpp	/^void AmberSystem::_ParseMolecules () {$/
AmberSystem::~AmberSystem	ambersystem.cpp	/^AmberSystem::~AmberSystem () {$/
Analyzer::Analyzer	analysis.cpp	/^Analyzer::Analyzer ($/
Analyzer::AngleBin	analysis.cpp	/^int Analyzer::AngleBin (const double angle) {$/
Analyzer::Molecular_Axis_Orientation_Histogram	analysis.cpp	/^vector<int> Analyzer::Molecular_Axis_Orientation_H/
Analyzer::PositionBin	analysis.cpp	/^int Analyzer::PositionBin (const double position) /
Analyzer::PositionBin	analysis.cpp	/^int Analyzer::PositionBin (const Atom * patom) {$/
Analyzer::_OutputHeader	analysis.cpp	/^void Analyzer::_OutputHeader () const {$/
Analyzer::_OutputStatus	analysis.cpp	/^void Analyzer::_OutputStatus (const int timestep)$/
Atom::Atom	atom.cpp	/^Atom::Atom () :$/
Atom::Atom	atom.cpp	/^Atom::Atom (std::string name, VecR position, VecR /
Atom::Atom	atom.cpp	/^Atom::Atom (std::string name, VecR position) :$/
Atom::Atom	atom.cpp	/^Atom::Atom (const Atom& oldAtom) :$/
Atom::Atom	atom.cpp	/^Atom::Atom (VecR position) :$/
Atom::MinDistance	atom.cpp	/^double Atom::MinDistance (const Atom& input) const/
Atom::MinDistance	atom.cpp	/^double Atom::MinDistance (Atom const * const input/
Atom::Print	atom.cpp	/^void Atom::Print () const {$/
Atom::SetCharge	atom.cpp	/^void Atom::SetCharge () {$/
Atom::SetMass	atom.cpp	/^void Atom::SetMass () {$/
Atom::Shift	atom.cpp	/^void Atom::Shift (VecR shift) {$/
Atom::Wrap	atom.cpp	/^void Atom::Wrap (VecR origin = VecR(0.0, 0.0, 0.0)/
Atom::operator-	atom.cpp	/^double Atom::operator- (const Atom& input) const {/
Atom::~Atom	atom.cpp	/^Atom::~Atom () {$/
BLOCK_HIGH	ambermpisys.h	/^#define BLOCK_HIGH(id,p,n)	(BLOCK_LOW((id)+1,(p),(/
BLOCK_LOW	ambermpisys.h	/^#define BLOCK_LOW(id,p,n)	((id)*(n)\/(p))$/
BLOCK_OWNER	ambermpisys.h	/^#define BLOCK_OWNER(index,p,n)	(((p)*((index)+1)-1/
BLOCK_SIZE	ambermpisys.h	/^#define BLOCK_SIZE(id,p,n)	(BLOCK_LOW((id)+1,(p),(/
Bond::Bond	bond.cpp	/^Bond::Bond () :$/
Bond::Bond	bond.cpp	/^Bond::Bond (double length, bondtype btype) :$/
Bond::Bond	bond.cpp	/^Bond::Bond (const Bond& oldBond) :$/
Bond::SetBondType	bond.cpp	/^void Bond::SetBondType (const bondtype btype) {$/
Bond::~Bond	bond.cpp	/^Bond::~Bond ()$/
BondGraph::BondGraph	bondgraph.cpp	/^BondGraph::BondGraph () :$/
BondGraph::BondGraph	bondgraph.cpp	/^BondGraph::BondGraph (Atom_ptr_vec& atoms) :$/
BondGraph::BondGraph	graph.cpp	/^BondGraph::BondGraph ()$/
BondGraph::BondGraph	graph.cpp	/^BondGraph::BondGraph (const Atom_ptr_vec& atoms, s/
BondGraph::BondedAtoms	graph.cpp	/^Atom_ptr_vec BondGraph::BondedAtoms$/
BondGraph::Distance	graph.cpp	/^double BondGraph::Distance (Atom const * const a1,/
BondGraph::NumHBonds	graph.cpp	/^int BondGraph::NumHBonds (Atom const * const ap) c/
BondGraph::NumHBonds	graph.cpp	/^int BondGraph::NumHBonds (Water const * const wat)/
BondGraph::UpdateGraph	graph.cpp	/^void BondGraph::UpdateGraph (const Atom_ptr_vec& a/
BondGraph::WaterCoordination	graph.cpp	/^coordination BondGraph::WaterCoordination (Water c/
BondGraph::_ClearAtoms	graph.cpp	/^void BondGraph::_ClearAtoms () {$/
BondGraph::_ClearBonds	graph.cpp	/^void BondGraph::_ClearBonds () {$/
BondGraph::_FindVertex	graph.cpp	/^Vertex_it BondGraph::_FindVertex (Atom const * con/
BondGraph::_FixSharedAtoms	graph.cpp	/^void BondGraph::_FixSharedAtoms () {$/
BondGraph::_GetBond	graph.cpp	/^Edge BondGraph::_GetBond (const Vertex& vi, const /
BondGraph::_GetBond	graph.cpp	/^Edge BondGraph::_GetBond (Atom const * const a1, A/
BondGraph::_ParseAtoms	bondgraph.cpp	/^void BondGraph::_ParseAtoms (std::vector<Atom *>& /
BondGraph::_ParseAtoms	graph.cpp	/^void BondGraph::_ParseAtoms (const Atom_ptr_vec& a/
BondGraph::_ParseBonds	graph.cpp	/^void BondGraph::_ParseBonds () {$/
BondGraph::_ParseDistances	bondgraph.cpp	/^void BondGraph::_ParseDistances () {$/
BondGraph::_RemoveBond	graph.cpp	/^void BondGraph::_RemoveBond (const Vertex& vi, con/
BondGraph::_RemoveBond	graph.cpp	/^void BondGraph::_RemoveBond (Atom const * const a1/
BondGraph::_SetBond	graph.cpp	/^void BondGraph::_SetBond (const Vertex& vi, const /
BondGraph::~BondGraph	bondgraph.cpp	/^BondGraph::~BondGraph () {$/
BondGraph::~BondGraph	graph.cpp	/^BondGraph::~BondGraph () {$/
BoxFiller::BoxFiller	boxfiller.cpp	/^BoxFiller::BoxFiller (string paramfile, string pdb/
BoxFiller::_FillBoxLattice	boxfiller.cpp	/^void BoxFiller::_FillBoxLattice () {$/
BoxFiller::_FillBoxRandom	boxfiller.cpp	/^void BoxFiller::_FillBoxRandom () {$/
BoxFiller::_InitParams	boxfiller.cpp	/^void BoxFiller::_InitParams () {$/
BoxFiller::~BoxFiller	boxfiller.cpp	/^BoxFiller::~BoxFiller() { };$/
CRDFile::CRDFile	crdfile.cpp	/^CRDFile::CRDFile (std::string const crdpath, int c/
CRDFile::LoadFirst	crdfile.cpp	/^void CRDFile::LoadFirst() {$/
CRDFile::LoadNext	crdfile.cpp	/^void CRDFile::LoadNext () {$/
CRDFile::~CRDFile	crdfile.cpp	/^CRDFile::~CRDFile () {$/
CarbonChain::CarbonChain	carbonchain.cpp	/^CarbonChain::CarbonChain () $/
CarbonChain::CarbonChain	carbonchain.cpp	/^CarbonChain::CarbonChain (const Molecule& molecule/
CarbonChain::Vector_CoM_To_End	carbonchain.cpp	/^VecR CarbonChain::Vector_CoM_To_End () {$/
CarbonChain::~CarbonChain	carbonchain.cpp	/^CarbonChain::~CarbonChain () {$/
ComplexDataFile::ComplexDataFile	complexdatafile.cpp	/^ComplexDataFile::ComplexDataFile (const char * pat/
ComplexDataFile::DataPoint	complexdatafile.cpp	/^std::complex<double> ComplexDataFile::DataPoint (c/
ComplexDataFile::_ParseFile	complexdatafile.cpp	/^void ComplexDataFile::_ParseFile () {$/
ConnectivityMatrix::ClosestAtoms	connectmatrix.cpp	/^std::vector<Atom *> ConnectivityMatrix::ClosestAto/
ConnectivityMatrix::ConnectivityMatrix	connectmatrix.cpp	/^ConnectivityMatrix::ConnectivityMatrix (std::vecto/
ConnectivityMatrix::CovalentBonds	connectmatrix.cpp	/^std::vector<Atom *> ConnectivityMatrix::CovalentBo/
ConnectivityMatrix::Distance	connectmatrix.cpp	/^double ConnectivityMatrix::Distance (const Atom * /
ConnectivityMatrix::FindWaterCoordination	connectmatrix.cpp	/^coordination ConnectivityMatrix::FindWaterCoordina/
ConnectivityMatrix::UpdateMatrix	connectmatrix.cpp	/^void ConnectivityMatrix::UpdateMatrix () {$/
ConnectivityMatrix::_FindBonds	connectmatrix.cpp	/^void ConnectivityMatrix::_FindBonds (Atom * atom1,/
ConnectivityMatrix::_FormCovalentBond	connectmatrix.cpp	/^void ConnectivityMatrix::_FormCovalentBond (const /
ConnectivityMatrix::_FormHBond	connectmatrix.cpp	/^void ConnectivityMatrix::_FormHBond (Atom * atom1,/
CoordName	connectmatrix.cpp	/^const string CoordName (coordination coord) {$/
Decane::Decane	decane.cpp	/^Decane::Decane () $/
Decane::Decane	decane.cpp	/^Decane::Decane (const Molecule& molecule) $/
Decane::SetAtoms	decane.cpp	/^void Decane::SetAtoms () {$/
Decane::~Decane	decane.cpp	/^Decane::~Decane () {$/
DipoleFieldTensor::DipoleFieldTensor	dipolefieldtensor.cpp	/^DipoleFieldTensor::DipoleFieldTensor (double const/
DipoleFieldTensor::~DipoleFieldTensor	dipolefieldtensor.cpp	/^DipoleFieldTensor::~DipoleFieldTensor () {$/
EdgeProperties	graph.h	/^struct EdgeProperties {$/
FindInterfaces	interfaces.h	/^vector<double> FindInterfaces (string atomName, st/
FindInterfacialWaters	watersystem.h	/^void WaterSystem<T>::FindInterfacialWaters () {$/
FindMols	watersystem.h	/^void WaterSystem<T>::FindMols (const string name) /
FindWaters	watersystem.h	/^void WaterSystem<T>::FindWaters () {$/
FlipWaters	watersystem.h	/^void WaterSystem<T>::FlipWaters (const coord axis)/
ForceFile::ForceFile	forcefile.cpp	/^ForceFile::ForceFile (std::string const forcepath,/
ForceFile::LoadFirst	forcefile.cpp	/^void ForceFile::LoadFirst() {$/
ForceFile::LoadNext	forcefile.cpp	/^void ForceFile::LoadNext () {$/
ForceFile::~ForceFile	forcefile.cpp	/^ForceFile::~ForceFile () {$/
Histogram::Histogram	histogram.cpp	/^Histogram::Histogram (double const min, double con/
Histogram::Histogram	histogram.cpp	/^Histogram::Histogram (double const min, double con/
Histogram::Print	histogram.cpp	/^void Histogram::Print () {$/
Hydronium::Hydronium	h3o.cpp	/^Hydronium::Hydronium () : Molecule()$/
Hydronium::SetAtoms	h3o.cpp	/^void Hydronium::SetAtoms () {$/
Hydronium::~Hydronium	h3o.cpp	/^Hydronium::~Hydronium () {$/
Hydroxide::Hydroxide	oh.cpp	/^Hydroxide::Hydroxide () : Molecule()$/
Hydroxide::SetAtoms	oh.cpp	/^void Hydroxide::SetAtoms () {$/
Hydroxide::~Hydroxide	oh.cpp	/^Hydroxide::~Hydroxide () {$/
Join	thread.h	/^void * Thread<T>::Join () {$/
MPIMolSystem::FindInterfaces	ambermpisys.h	/^vector<double> MPIMolSystem::FindInterfaces (strin/
MPIMolSystem::LoadNext	ambermpisys.h	/^void MPIMolSystem::LoadNext () {$/
MPIMolSystem::MPIMolSystem	ambermpisys.h	/^MPIMolSystem::MPIMolSystem (int *argc, char ***arg/
MPIMolSystem::_InitAtoms	ambermpisys.h	/^void MPIMolSystem::_InitAtoms () {$/
MPIMolSystem::_MPIFinalize	ambermpisys.h	/^void MPIMolSystem::_MPIFinalize () {$/
MPIMolSystem::_MPISystemInit	ambermpisys.h	/^void MPIMolSystem::_MPISystemInit (int *argc, char/
MPIMolSystem::_MolSystemInit	ambermpisys.h	/^void MPIMolSystem::_MolSystemInit (string prmtop, /
MPIMolSystem::_ParseMols	ambermpisys.h	/^void MPIMolSystem::_ParseMols () {$/
MPIMolSystem::_UpdateCoords	ambermpisys.h	/^void MPIMolSystem::_UpdateCoords () {$/
MPIMolSystem::~MPIMolSystem	ambermpisys.h	/^MPIMolSystem::~MPIMolSystem () {$/
MatR::Determinant	matrixr.cpp	/^double MatR::Determinant () const {$/
MatR::Index	matrixr.cpp	/^double MatR::Index (int const row, int const col) /
MatR::Index	matrixr.cpp	/^double MatR::Index (coord const row, coord const c/
MatR::Inverse	matrixr.cpp	/^MatR MatR::Inverse () const {$/
MatR::Print	matrixr.cpp	/^void MatR::Print () const {$/
MatR::Set	matrixr.cpp	/^void MatR::Set (int const row, int const col, doub/
MatR::Set	matrixr.cpp	/^void MatR::Set (coord const row, coord const col, /
MatR::Set	matrixr.cpp	/^void MatR::Set (double * const data) {$/
MatR::Trace	matrixr.cpp	/^double MatR::Trace () const {$/
MatR::Transpose	matrixr.cpp	/^MatR MatR::Transpose () const {$/
MatR::operator()	matrixr.cpp	/^double MatR::operator() (int const row, int const /
MatR::operator()	matrixr.cpp	/^double MatR::operator() (coord const row, coord co/
MatR::operator*	matrixr.cpp	/^VecR MatR::operator* (const VecR& input) const {		/
MatR::operator*	matrixr.cpp	/^MatR MatR::operator* (const MatR& input) const {		/
MatR::operator+	matrixr.cpp	/^MatR MatR::operator+ (const MatR& input) const {$/
Mcomplexdatafile.cpp	complexdatafile.cpp	/^int main (int argc, char **argv) {$/
Molecule::AddAtom	molecule.cpp	/^void Molecule::AddAtom (Atom * const atom) {$/
Molecule::AddHydrogen	molecule.cpp	/^void Molecule::AddHydrogen (Atom * const atom) {$/
Molecule::CalcDipole	molecule.cpp	/^VecR Molecule::CalcDipole () {$/
Molecule::DCMToLab	molecule.cpp	/^MatR const & Molecule::DCMToLab (const coord axis)/
Molecule::FixAtom	molecule.cpp	/^void Molecule::FixAtom (Atom * const atom) {$/
Molecule::GetAtom	molecule.cpp	/^Atom * Molecule::GetAtom (const string atomname) c/
Molecule::Merge	molecule.cpp	/^Molecule * Molecule::Merge (Molecule * mol) {$/
Molecule::MinDistance	molecule.cpp	/^double Molecule::MinDistance (Molecule& mol) {$/
Molecule::Molecule	molecule.cpp	/^Molecule::Molecule () :$/
Molecule::Molecule	molecule.cpp	/^Molecule::Molecule (const Molecule& oldMol) :$/
Molecule::Print	molecule.cpp	/^void Molecule::Print () const {$/
Molecule::Reflect	molecule.cpp	/^void Molecule::Reflect (coord const axis, double c/
Molecule::RemoveAtom	molecule.cpp	/^void Molecule::RemoveAtom (Atom * const atom) {$/
Molecule::Rename	molecule.cpp	/^void Molecule::Rename (const string name) {$/
Molecule::Rotate	molecule.cpp	/^void Molecule::Rotate (VecR origin, VecR axis, dou/
Molecule::RotateMatrix	molecule.cpp	/^void Molecule::RotateMatrix (double rotation[][3],/
Molecule::RotateToLab	molecule.cpp	/^void Molecule::RotateToLab (double vector[3]) cons/
Molecule::RotateToLab	molecule.cpp	/^void Molecule::RotateToLab (double matrix[][3]) co/
Molecule::RotateToMol	molecule.cpp	/^void Molecule::RotateToMol (double vector[3]) cons/
Molecule::RotateToMol	molecule.cpp	/^void Molecule::RotateToMol (double matrix[][3]) co/
Molecule::RotateVector	molecule.cpp	/^void Molecule::RotateVector (double rotation[][3],/
Molecule::Shift	molecule.cpp	/^void Molecule::Shift (VecR shift) {$/
Molecule::UpdateCenterOfMass	molecule.cpp	/^VecR Molecule::UpdateCenterOfMass () {$/
Molecule::_FindEulerAngles	molecule.cpp	/^void Molecule::_FindEulerAngles () {$/
Molecule::clear	molecule.cpp	/^void Molecule::clear () {$/
Molecule::~Molecule	molecule.cpp	/^Molecule::~Molecule () {$/
MoleculeDensity	density.cpp	/^vector<int> MoleculeDensity ( AmberSystem& sys, do/
MoritaSFG::CalcDipole	moritasfg2002.cpp	/^VecR MoritaSFG::CalcDipole (Water * water) {$/
MoritaSFG::CalcPolarizability	moritasfg2002.cpp	/^MatR MoritaSFG::CalcPolarizability (Water * water)/
MoritaSFG::CalcTotalPolarizability	moritasfg2002.cpp	/^MatR& MoritaSFG::CalcTotalPolarizability (std::vec/
MoritaSFG::CalcTotalPolarization	moritasfg2002.cpp	/^VecR& MoritaSFG::CalcTotalPolarization (std::vecto/
MoritaSFG::MatrixInverse	moritasfg2002.cpp	/^void MoritaSFG::MatrixInverse (double *G, int n) {/
MoritaSFG::UpdateAlphaTensor	moritasfg2002.cpp	/^void MoritaSFG::UpdateAlphaTensor () {$/
MoritaSFG::UpdateDipoleFieldTensor	moritasfg2002.cpp	/^void MoritaSFG::UpdateDipoleFieldTensor () {$/
Nitrate::Nitrate	hno3.cpp	/^Nitrate::Nitrate () : Molecule () {$/
Nitrate::SetAtoms	hno3.cpp	/^void Nitrate::SetAtoms () {$/
Nitrate::~Nitrate	hno3.cpp	/^Nitrate::~Nitrate () {$/
NitricAcid::CalcNO2Dipole	hno3.cpp	/^bool NitricAcid::CalcNO2Dipole () {$/
NitricAcid::MolecularPlaneVector	hno3.cpp	/^VecR NitricAcid::MolecularPlaneVector () {$/
NitricAcid::NO2Bisector	hno3.cpp	/^VecR NitricAcid::NO2Bisector () {$/
NitricAcid::NitricAcid	hno3.cpp	/^NitricAcid::NitricAcid () : Molecule () {$/
NitricAcid::PrintNO2	hno3.cpp	/^void NitricAcid::PrintNO2 () const {$/
NitricAcid::SetAtoms	hno3.cpp	/^void NitricAcid::SetAtoms () {$/
NitricAcid::~NitricAcid	hno3.cpp	/^NitricAcid::~NitricAcid () {$/
Node::AddEdge	node.cpp	/^void Node::AddEdge (Edge * e) {$/
Node::Node	node.cpp	/^Node::Node () {$/
Node::RemoveEdge	node.cpp	/^void Node::RemoveEdge (Edge * e) {$/
Node::RemoveEdges	node.cpp	/^void Node::RemoveEdges () {$/
Node::~Node	node.cpp	/^Node::~Node () {$/
NumberDensity	density.cpp	/^vector<int> NumberDensity (AmberSystem& sys, doubl/
OpenFile	watersystem.h	/^void WaterSystem<T>::OpenFile () {$/
PDBFile::LoadFirst	pdbfile.cpp	/^void PDBFile::LoadFirst() {$/
PDBFile::LoadLast	pdbfile.cpp	/^void PDBFile::LoadLast () {$/
PDBFile::LoadNext	pdbfile.cpp	/^void PDBFile::LoadNext () {$/
PDBFile::PDBFile	pdbfile.cpp	/^PDBFile::PDBFile (string path) {$/
PDBFile::PDBFile	pdbfile.cpp	/^PDBFile::PDBFile () {$/
PDBFile::PDBFile	pdbfile.cpp	/^PDBFile::PDBFile (vector<Molecule *>& mols) {$/
PDBFile::Seek	pdbfile.cpp	/^void PDBFile::Seek (int step) {$/
PDBFile::WritePDB	pdbfile.cpp	/^void PDBFile::WritePDB (vector<Molecule *>& sys) {/
PDBFile::_FindLastStep	pdbfile.cpp	/^int PDBFile::_FindLastStep () {$/
PDBFile::_ParseAtom	pdbfile.cpp	/^Atom *PDBFile::_ParseAtom (const char *atomEntry) /
PDBFile::~PDBFile	pdbfile.cpp	/^PDBFile::~PDBFile () {$/
PRINTV	utility.h	/^#define PRINTV(vector)	\\$/
PRINTV2	utility.h	/^#define PRINTV2(vector)	\\$/
RDF	rdf.h	/^vector<double> RDF (string atomName1, string atomN/
RUN	utility.h	/^#define RUN(list)   \\$/
RUN2	utility.h	/^#define RUN2(list)  \\$/
SFGCalculator::Beta	watersfg.cpp	/^std::vector< std::complex<double> >& SFGCalculator/
SFGCalculator::CouplingConstant	watersfg.cpp	/^double SFGCalculator::CouplingConstant (Water& wat/
SFGCalculator::DipolePotential	watersfg.cpp	/^double SFGCalculator::DipolePotential (const VecR&/
SFGCalculator::FreqShift	watersfg.cpp	/^void SFGCalculator::FreqShift (Water& water) {$/
SFGCalculator::PolarizabilityAndDipoleDerivs	watersfg.cpp	/^void SFGCalculator::PolarizabilityAndDipoleDerivs /
SFGCalculator::SFGCalculator	watersfg.cpp	/^SFGCalculator::SFGCalculator (BondGraph * graph) :/
SFGCalculator::WaterEigenSystem	watersfg.cpp	/^void SFGCalculator::WaterEigenSystem (Water& water/
SliceWaterCoordination	watersystem.h	/^void WaterSystem<T>::SliceWaterCoordination (const/
SliceWaters	watersystem.h	/^void WaterSystem<T>::SliceWaters (const double low/
SystemAnalysis	analysis.cpp	/^void SystemAnalysis ()$/
TOPFile::FindFlag	topfile.cpp	/^void TOPFile::FindFlag (std::string flag) {$/
TOPFile::LoadSection	topfile.cpp	/^void TOPFile::LoadSection(std::string flag) {$/
TOPFile::TOPFile	topfile.cpp	/^TOPFile::TOPFile (std::string path) :$/
TOPFile::TOPFile	topfile.cpp	/^TOPFile::TOPFile (const TOPFile& topfile) :$/
TOPFile::TOPFile	topfile.cpp	/^TOPFile::TOPFile () {$/
TOPFile::~TOPFile	topfile.cpp	/^TOPFile::~TOPFile () {$/
Thread	thread.h	/^class Thread {$/
Thread	thread.h	/^Thread<T>::Thread (fct_ptr f, void * arg) $/
VecR::Magnitude	vecr.cpp	/^double VecR::Magnitude () const {$/
VecR::MinDistance	vecr.cpp	/^double VecR::MinDistance (const VecR& input, const/
VecR::MinVector	vecr.cpp	/^VecR VecR::MinVector (const VecR& input, const Vec/
VecR::Print	vecr.cpp	/^void VecR::Print () const {$/
VecR::Unit	vecr.cpp	/^VecR VecR::Unit () const {$/
VecR::VecR	vecr.cpp	/^VecR::VecR() : _coords(3) {$/
VecR::VecR	vecr.cpp	/^VecR::VecR (const double X, const double Y, const /
VecR::VecR	vecr.cpp	/^VecR::VecR (const VecR& oldVec) : _coords(oldVec._/
VecR::VecR	vecr.cpp	/^VecR::VecR (const double * vec) : _coords(3,0.0) {/
VecR::VecR	vecr.cpp	/^VecR::VecR (const Double_vector& vec) : _coords(ve/
VecR::Wrap	vecr.cpp	/^VecR& VecR::Wrap (VecR& size, VecR origin) {$/
VecR::Zero	vecr.cpp	/^void VecR::Zero () {$/
VecR::operator%	vecr.cpp	/^VecR VecR::operator% (const VecR& input) const {$/
VecR::operator()	vecr.cpp	/^double VecR::operator() (const coord index) const /
VecR::operator()	vecr.cpp	/^double VecR::operator() (const int index) const {$/
VecR::operator*	vecr.cpp	/^double VecR::operator* (const VecR& input) const {/
VecR::operator*	vecr.cpp	/^VecR VecR::operator* (const double input) const {$/
VecR::operator*=	vecr.cpp	/^void VecR::operator*= (const double input) {$/
VecR::operator+	vecr.cpp	/^VecR VecR::operator+ (const VecR& input) const {$/
VecR::operator+=	vecr.cpp	/^void VecR::operator+= (const VecR& input) {$/
VecR::operator+=	vecr.cpp	/^void VecR::operator+= (const double input) {$/
VecR::operator-	vecr.cpp	/^VecR VecR::operator- (const VecR& input) const {$/
VecR::operator-=	vecr.cpp	/^void VecR::operator-= (const VecR& input) {$/
VecR::operator-=	vecr.cpp	/^void VecR::operator-= (const double input) {$/
VecR::operator<	vecr.cpp	/^double VecR::operator< (const VecR& input) const {/
VecR::operator=	vecr.cpp	/^VecR& VecR::operator= (const VecR& input) {$/
VecR::operator==	vecr.cpp	/^bool VecR::operator== (const VecR& input) const {$/
VecR::~VecR	vecr.cpp	/^VecR::~VecR () {$/
WannierFile::LoadFirst	wannier.cpp	/^void WannierFile::LoadFirst() {$/
WannierFile::LoadNext	wannier.cpp	/^void WannierFile::LoadNext () {$/
WannierFile::WannierFile	wannier.cpp	/^WannierFile::WannierFile (std::string wannierpath)/
WannierFile::~WannierFile	wannier.cpp	/^WannierFile::~WannierFile () {$/
Water::Bisector	h2o.cpp	/^VecR Water::Bisector () {$/
Water::CalcEulerAngles	h2o.cpp	/^void Water::CalcEulerAngles (const coord axis) {$/
Water::DCMToLabMorita	h2o.cpp	/^MatR const & Water::DCMToLabMorita (const coord ax/
Water::DCMToLabOrder	h2o.cpp	/^MatR const & Water::DCMToLabOrder () {$/
Water::FindEulerAngles	backup.h	/^void Water::FindEulerAngles () {$/
Water::FindEulerAngles	eulerangles.h_bak	/^void Water::FindEulerAngles () {$/
Water::Flip	h2o.cpp	/^void Water::Flip (const coord axis) {$/
Water::SetAtoms	h2o.cpp	/^void Water::SetAtoms () {$/
Water::SetMoritaAxes	h2o.cpp	/^void Water::SetMoritaAxes (const int Zbond) {$/
Water::SetOrderAxes	h2o.cpp	/^void Water::SetOrderAxes () {$/
Water::Water	h2o.cpp	/^Water::Water () : Molecule ()$/
Water::Water	h2o.cpp	/^Water::Water (const Molecule& molecule) : Molecule/
Water::~Water	h2o.cpp	/^Water::~Water () {$/
WaterAnalyzer::BondTrajectory	wateranalyzer.h	/^vector<double> WaterAnalyzer::BondTrajectory (stri/
WaterAnalyzer::CoordTrajectories	wateranalyzer.h	/^vector< vector<trajectory> > WaterAnalyzer::CoordT/
WaterAnalyzer::DipoleCorrelation	wateranalyzer.h	/^trajectory WaterAnalyzer::DipoleCorrelation () {$/
WaterAnalyzer::NO3Rotation	wateranalyzer.h	/^trajectory WaterAnalyzer::NO3Rotation () {$/
WaterAnalyzer::RDF	wateranalyzer.h	/^vector<double> WaterAnalyzer::RDF (string atomName/
WaterAnalyzer::SysDipoleCorrelation	wateranalyzer.h	/^trajectory WaterAnalyzer::SysDipoleCorrelation () /
WaterAnalyzer::ZCoordHistogram	wateranalyzer.h	/^vector< vector<int> > WaterAnalyzer::ZCoordHistogr/
WaterDipoleParms::WaterDipoleParms	dipoleparm.cpp	/^WaterDipoleParms::WaterDipoleParms (string parmpat/
WaterDipoleParms::_Data	dipoleparm.cpp	/^double * WaterDipoleParms::_Data (double r1, doubl/
WaterSystem	amberwatersystem.h	/^class AmberWaterSystem : public WaterSystem<AmberS/
WaterSystem	watersystem.h	/^WaterSystem<T>::WaterSystem (const WaterSystemPara/
WaterSystem	xyzwatersystem.h	/^class XYZWaterSystem : public WaterSystem<XYZSyste/
XYZFile::LoadFirst	xyzfile.cpp	/^void XYZFile::LoadFirst() {$/
XYZFile::LoadNext	xyzfile.cpp	/^void XYZFile::LoadNext () {$/
XYZFile::Seek	xyzfile.cpp	/^void XYZFile::Seek (int step) {$/
XYZFile::XYZFile	xyzfile.cpp	/^XYZFile::XYZFile (std::string path) {$/
XYZFile::_FindSteps	xyzfile.cpp	/^void XYZFile::_FindSteps () {$/
XYZFile::~XYZFile	xyzfile.cpp	/^XYZFile::~XYZFile () {$/
XYZSystem::LoadFirst	xyzsystem.cpp	/^void XYZSystem::LoadFirst () {$/
XYZSystem::LoadNext	xyzsystem.cpp	/^void XYZSystem::LoadNext () {$/
XYZSystem::Seek	xyzsystem.cpp	/^void XYZSystem::Seek (int step) {$/
XYZSystem::SystemDipole	xyzsystem.cpp	/^VecR XYZSystem::SystemDipole () {$/
XYZSystem::XYZSystem	xyzsystem.cpp	/^XYZSystem::XYZSystem (string filepath, VecR size, /
XYZSystem::_ParseMolecules	xyzsystem.cpp	/^void XYZSystem::_ParseMolecules () {$/
XYZSystem::_ParseNitrates	xyzsystem.cpp	/^void XYZSystem::_ParseNitrates () {$/
XYZSystem::_ParseWanniers	xyzsystem.cpp	/^void XYZSystem::_ParseWanniers () {$/
XYZSystem::_ParseWaters	xyzsystem.cpp	/^void XYZSystem::_ParseWaters () {$/
XYZSystem::~XYZSystem	xyzsystem.cpp	/^XYZSystem::~XYZSystem () {$/
analysis	Makefile	/^analysis: $(ANALYSISFILES)$/
clean	Makefile	/^clean:$/
cleanall	Makefile	/^cleanall:$/
operator++	histogram.h	/^	int 	operator++ (int bin) { _histogram[bin]++; }$/
operator--	histogram.h	/^	int 	operator-- (int bin) { _histogram[bin]--; }$/
operator=	matrixr.h	/^	void 	operator= (const MatR& input) {				\/\/ assig/
q_pt	hno3analysis.cpp	/^double q_pt (XYZSystem& sys, Molecule * hno3) {$/
yout	curvefit.tar	/^function yout = testmlfitfunc(x, params)$/
~WaterSystem	watersystem.h	/^WaterSystem<T>::~WaterSystem () {$/
